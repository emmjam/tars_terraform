#!/bin/bash -xe

function log() {
  echo "[$(date)]$1" | tee -a /var/log/wildfly_batch_cloudinit.log
}

log '[INFO] Running puppet to configure wildfly environment'


sed -E -i "s/'[a-z0-9]{8}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-f0-9]{4}\-[a-z0-9]{12}'/'${kms_key}'/g" /etc/eyaml/config.yaml

# Ensure the directory exists
mkdir -p /efs;

# Get Region and AZ from AWS EC2 meta-data. We could take region as a template parameter, but why since meta-data is canonical?
export region="$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)";
export az="$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)";

# Set mount information in /etc/fstab - we're unlikely to reboot, but it can't hurt to ensure it remains
echo "$${az}.${EFS_ID}.efs.$${region}.amazonaws.com:/ /efs nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab

# Mount the configured target for Batch
mount /efs

cd /tmp/packer-puppet-masterless
export FACTER_environment='${environment}'
export FACTER_puppet_environment='${puppet_environment}'
export FACTER_nodetype='${nodetype}'
export FACTER_aws_account='${aws_account_id}'
/opt/puppetlabs/bin/puppet apply --verbose --modulepath='/tmp/packer-puppet-masterless/module-0:/tmp/packer-puppet-masterless/module-1' --hiera_config='/tmp/packer-puppet-masterless/hiera.yaml'  /tmp/packer-puppet-masterless/manifests/site.pp

# Now puppet has finished and we don't need to lookup KMS keys, we can override DNS
# Override DNS to use DVSA Azure DNS. TF knows what the IP's are so lets do it here, rather than puppet
echo "Setting DNS"
echo "search ${search_suffix}" > /etc/resolv.conf
servers=$(echo ${dvsa_dns_servers} | sed 's/,/ /g' | sed 's,/32,,g')
for server in $$servers
do
  echo "nameserver $${server}" >> /etc/resolv.conf
done


log '[INFO] Wildfly batch configuration finished'
