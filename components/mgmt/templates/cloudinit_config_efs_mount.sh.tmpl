#!/bin/bash

# Configure the EFS Mount.
# Puppet will handle service startup.

# Ensure the directory exists
mkdir -p "${MOUNT_POINT}";
mount -p "${MOUNT_POINT_ENC}";

# Set mount information in /etc/fstab - we're unlikely to reboot, but it can't hurt to ensure it remains
echo "${EFS_ID}.efs.${AWS_REGION}.amazonaws.com:/ ${MOUNT_POINT} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab;
echo "$${az}.${EFS_ENC_ID}.efs.$${region}.amazonaws.com:/ ${MOUNT_POINT_ENC} efs rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,tls 0 0" >> /etc/fstab

# Mount the configured target for Grafana
mount ${MOUNT_POINT};
mount ${MOUNT_POINT_ENC};

# Make sure the nexus user owns /opt as that's it home dir
chown nexus:nexus /opt;
chmod 755 /opt/sonatype-work/nexus3



## TEMPORARY WORK TO GET EFS ENCRYPTED

cat >> /root/efs_sync.sh << EOT
#!/bin/bash
PATH="/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin"

# Dont run multiple processes simultainously
if [ -f "/efs_enc/rsync.lock" ]; then
  exit 0
fi

# Check that EFS is mounted
if [ ! $(df -hT | grep -c nfs4) = 2 ]; then
  exit 0
fi

# Prevent other processes from starting
touch "/efs_enc/rsync.lock"
date

# Perform the rsync
nice -10 rsync -avhW --progress /opt/sonatype-work/nexus3/ /efs_enc

date
echo
echo " #############################################################"
echo

# Remove the lock
rm -f "/efs_enc/rsync.lock"
EOT

chmod +x /root/efs_sync.sh

crontab -l > /tmp/cron_tmp
echo >> /tmp/cron_tmp
echo "# Temporary cron for keeping EFS in sync" >> /tmp/cron_tmp
echo "00 4,10,16,22 * * * /root/efs_sync.sh >> /var/log/efs_rsync.log 2>&1 >/dev/null" >> /tmp/cron_tmp
crontab /tmp/cron_tmp
rm -f /tmp/cron_tmp

/root/efs_sync.sh >> /var/log/efs_rsync.log